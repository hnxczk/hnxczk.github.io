{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{249:function(t,a,s){t.exports=s.p+\"assets/img/flex.3c3cec81.jpeg\"},250:function(t,a,s){t.exports=s.p+\"assets/img/js_logic.4f4d0e7c.png\"},445:function(t,a,s){\"use strict\";s.r(a);var r=s(0),e=Object(r.a)({},function(){var t=this,a=t.$createElement,r=t._self._c||a;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[r(\"h1\",{attrs:{id:\"mdn-前端合集\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mdn-前端合集\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" MDN 前端合集\")]),t._v(\" \"),r(\"p\",[t._v(\"最近花了一段时间将 MDN 上面 CSS 和 JavaScript 相关教程整体看了一遍，整理成了下面这两个思维导图。\")]),t._v(\" \"),r(\"p\",[t._v(\"在整理的过程中基本上按照 MDN 上面的大纲进行的。并修改了部分内容的顺序以适应思维导图的样式。\")]),t._v(\" \"),r(\"p\",[t._v(\"源文件在这里 \"),r(\"a\",{attrs:{href:\"./source/CSS.xmind\"}},[t._v(\"CSS\")]),t._v(\" 、\"),r(\"a\",{attrs:{href:\"./source/JavaScript.xmind\"}},[t._v(\"JavaScript\")]),t._v(\"。 需要用 \"),r(\"a\",{attrs:{href:\"https://www.xmind.cn/zen/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"XMind ZEN\"),r(\"OutboundLink\")],1),t._v(\" 打开(试用版完全够用)。\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"总结\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#总结\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 总结\")]),t._v(\" \"),r(\"h3\",{attrs:{id:\"css\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#css\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" CSS\")]),t._v(\" \"),r(\"p\",[t._v(\"CSS 相对于 JS 来说相对简单一点。结合学习和使用的情况，下面列出了一些我认为的几个重点内容以供参考。\")]),t._v(\" \"),r(\"h4\",{attrs:{id:\"_1-css-选择器\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-css-选择器\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 1. CSS 选择器\")]),t._v(\" \"),r(\"p\",[t._v(\"主要指选择器的语法以及层叠与继承。了解了这些以后可以用更少的代码实现一些特殊的需求。\")]),t._v(\" \"),r(\"h4\",{attrs:{id:\"_2-盒子模型\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-盒子模型\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 2. 盒子模型\")]),t._v(\" \"),r(\"p\",[t._v(\"包括盒子模型的定义、属性。这些可以帮助理解一些看起来比较“异常”的现象。比如设置宽高属性无效一般都是因为父类的宽高没有确定等等问题（别问我为啥知道 😭）\")]),t._v(\" \"),r(\"h4\",{attrs:{id:\"_3-布局\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-布局\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 3. 布局\")]),t._v(\" \"),r(\"p\",[t._v(\"我认为这个是最重要的内容，也是我最初比较疑惑的内容。了解这些有助于实现一些比较特殊的布局要求。\")]),t._v(\" \"),r(\"p\",[t._v(\"下面这个图片很清晰的演示了 flex 布局相关属性\")]),t._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:s(249),alt:\"flex 布局\"}})]),t._v(\" \"),r(\"p\",[t._v(\"补充一点，对齐是刚开始使用 CSS 的时候比较疑惑的一点，尤其是竖直方向上的。flex 布局的居中相对简单，position 布局的居中不太好写。这里提供一个比较方便实现对齐的方法（来自 Stack Overflow）。\")]),t._v(\" \"),r(\"div\",{staticClass:\"language-CSS extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-css\"}},[r(\"code\",[t._v(\"// 水平\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v(\"left\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" 50%\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v(\"transform\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"translateX\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"-50%\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n// 竖直\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v(\"top\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" 50%\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v(\"transform\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"translateY\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"-50%\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n// 同时居中\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v(\"top\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" 50%\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v(\"left\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" 50%\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v(\"transform\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"translate\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"-50%\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" -50%\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),r(\"h4\",{attrs:{id:\"_4-样式\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-样式\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 4. 样式\")]),t._v(\" \"),r(\"p\",[t._v(\"包括文本和盒子的样式，也用于实现 UI 设计的一些“苛刻”的要求😂。。。\")]),t._v(\" \"),r(\"h3\",{attrs:{id:\"js\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#js\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" JS\")]),t._v(\" \"),r(\"p\",[t._v(\"本来 JS 这块儿要按照根据编程语言的一般定义（用一定的词法和语法，表达一定语义，操作运行时）来整理的，但是进行了一半之后发现 MDN 上面的教程不能完全按照这个进行划分，重新整理的话要耗费额外的精力，反而耽误了效率。因此下面的这个图按照 \"),r(\"a\",{attrs:{href:\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"JavaScript 指南\\n\"),r(\"OutboundLink\")],1),t._v(\" 划分的章节进行整理，部分细节做了微调。\")]),t._v(\" \"),r(\"p\",[t._v(\"下面列一些关键点\")]),t._v(\" \"),r(\"h4\",{attrs:{id:\"_1-javascript-语句后应该加分号么？\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-javascript-语句后应该加分号么？\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 1. JavaScript 语句后应该加分号么？\")]),t._v(\" \"),r(\"p\",[t._v(\"个人倾向于不加分号，在以 ([/+- 开头的语句前加分号。\")]),t._v(\" \"),r(\"p\",[t._v(\"具体可以参考以下资料\")]),t._v(\" \"),r(\"ol\",[r(\"li\",[r(\"a\",{attrs:{href:\"https://www.zhihu.com/question/20298345/answer/14670020\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"知乎上贺师俊的回答\"),r(\"OutboundLink\")],1)]),t._v(\" \"),r(\"li\",[r(\"a\",{attrs:{href:\"https://www.cnblogs.com/fsjohnhuang/p/4154503.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"JS魔法堂：ASI (自动分号插入机制) 和前置分号\"),r(\"OutboundLink\")],1)])]),t._v(\" \"),r(\"h4\",{attrs:{id:\"_2-计算为-false-的值\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-计算为-false-的值\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 2. 计算为 false 的值\")]),t._v(\" \"),r(\"p\",[t._v('false、undefined、null、0、NaN、空字符串（\"\"）')]),t._v(\" \"),r(\"p\",[t._v(\"这一点是在使用条件语句以及逻辑判断的时候很有必要了解的内容\")]),t._v(\" \"),r(\"h4\",{attrs:{id:\"_3-逻辑运算符\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-逻辑运算符\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 3. 逻辑运算符\")]),t._v(\" \"),r(\"p\",[t._v(\"逻辑运算符返回的并不一定是 true 或者 false\")]),t._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:s(250),alt:\"\"}})]),t._v(\" \"),r(\"h4\",{attrs:{id:\"_4-遍历数组不要使用-for-in\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-遍历数组不要使用-for-in\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 4. 遍历数组不要使用 for...in\")]),t._v(\" \"),r(\"p\",[t._v(\"for...in 也会遍历数组对象的属性\")]),t._v(\" \"),r(\"h4\",{attrs:{id:\"_5-map-中的键值是有序的，而添加到对象中的键则不是。\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-map-中的键值是有序的，而添加到对象中的键则不是。\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 5. Map 中的键值是有序的，而添加到对象中的键则不是。\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"todo\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#todo\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" TODO\")]),t._v(\" \"),r(\"h3\",{attrs:{id:\"css-2\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#css-2\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" CSS\")]),t._v(\" \"),r(\"ol\",[r(\"li\",[t._v(\"CSS Grid\")]),t._v(\" \"),r(\"li\",[t._v(\"CSS 动画\")])]),t._v(\" \"),r(\"h3\",{attrs:{id:\"js-2\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#js-2\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" JS\")]),t._v(\" \"),r(\"ol\",[r(\"li\",[r(\"s\",[t._v(\"内存管理\")])]),t._v(\" \"),r(\"li\",[r(\"s\",[t._v(\"事件循环\")])])]),t._v(\" \"),r(\"h2\",{attrs:{id:\"css-3\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#css-3\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" CSS\")]),t._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:s(71),alt:\"\"}})]),t._v(\" \"),r(\"h2\",{attrs:{id:\"js-3\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#js-3\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" JS\")]),t._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:s(72),alt:\"\"}})])])},[],!1,null,null,null);a.default=e.exports},71:function(t,a,s){t.exports=s.p+\"assets/img/CSS.67d093c1.png\"},72:function(t,a,s){t.exports=s.p+\"assets/img/JavaScript.b4d87f3e.png\"}}]);","extractedComments":[]}