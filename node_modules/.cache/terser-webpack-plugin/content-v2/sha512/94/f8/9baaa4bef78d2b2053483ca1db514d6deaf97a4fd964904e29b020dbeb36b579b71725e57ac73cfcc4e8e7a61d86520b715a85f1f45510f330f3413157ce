{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{353:function(t,a,s){t.exports=s.p+\"assets/img/this.67988b9c.jpg\"},425:function(t,a,s){\"use strict\";s.r(a);var e=s(0),n=Object(e.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"this\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#this\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" this\")]),t._v(\" \"),e(\"p\",[t._v(\"大部分介绍 this 的文章都是从现象出发，然后总结规律。虽然说这也是一种方式，但这样以来就如同盲人摸象，只看到了局部而不能解释全局。前段时间看到有人从 ECMAScript 规范的角度来解读 this。我觉得这种方式不错，虽然可能有点晦涩难懂，不过它却能透过现象看到本质，不失为一种好的方法。\")]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://www.w3.org/html/ig/zh/wiki/ES5\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://www.w3.org/html/ig/zh/wiki/ES5\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"纠正\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#纠正\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 纠正\")]),t._v(\" \"),e(\"p\",[t._v(\"有些观点认为：this 的值取决于函数如何定义，如果它是全局函数，this 设置为全局对象，如果函数是一个对象的方法，this 将总是指向这个对象。\")]),t._v(\" \"),e(\"p\",[t._v(\"这是不正确的。通过前面\"),e(\"a\",{attrs:{href:\"./05md\"}},[t._v(\"《执行上下文和执行栈》\")]),t._v(\" 这篇文章我们知道函数执行的时候会创建执行上下文，而在执行上下文生成的过程中，会分别确定变量对象，作用域链，以及 this 的值。因此 this 的值在进入上下文时就确定了。而且在函数代码中，this 的值在每一次(进入上下文时)可能完全不同。但是不管怎样，在代码运行期间，this的值是不变的。\")]),t._v(\" \"),e(\"p\",[t._v(\"##\"),e(\"a\",{attrs:{href:\"https://www.w3.org/html/ig/zh/wiki/ES5/%E8%A1%A8%E8%BE%BE%E5%BC%8F#.E5.87.BD.E6.95.B0.E8.B0.83.E7.94.A8\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"函数调用\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"知道了 this 是在函数调用的时候确定的之后我们就去函数调用的规范去看看具体是如何确定的。\")]),t._v(\" \"),e(\"p\",[t._v(\"The production CallExpression : MemberExpression Arguments is evaluated as follows:\")]),t._v(\" \"),e(\"ol\",[e(\"li\",[e(\"strong\",[t._v(\"Let ref be the result of evaluating MemberExpression.\")])]),t._v(\" \"),e(\"li\",[e(\"strong\",[t._v(\"Let func be GetValue(ref).\")])]),t._v(\" \"),e(\"li\",[t._v(\"Let argList be the result of evaluating Arguments, producing an internal list of argument values (see 11.2.4).\")]),t._v(\" \"),e(\"li\",[t._v(\"If Type(func) is not Object, throw a TypeError exception.\")]),t._v(\" \"),e(\"li\",[t._v(\"If IsCallable(func) is false, throw a TypeError exception.\")]),t._v(\" \"),e(\"li\",[e(\"strong\",[t._v(\"If Type(ref) is Reference, then\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[e(\"strong\",[t._v(\"If IsPropertyReference(ref) is true, then\\nLet thisValue be GetBase(ref).\")])]),t._v(\" \"),e(\"li\",[e(\"strong\",[t._v(\"Else, the base of ref is an Environment Record\\nLet thisValue be the result of calling the ImplicitThisValue concrete method of GetBase(ref).\")])])])]),t._v(\" \"),e(\"li\",[e(\"strong\",[t._v(\"Else, Type(ref) is not Reference.\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[e(\"strong\",[t._v(\"Let thisValue be undefined.\")])])])]),t._v(\" \"),e(\"li\",[t._v(\"Return the result of calling the [[Call]] internal method on func, providing thisValue as the this value and providing the list argList as the argument values.\")])]),t._v(\" \"),e(\"p\",[t._v(\"上面有许多不认识的方法和类型，这需要我们先了解一下引用类型（Reference type）。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"左值表达式\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#左值表达式\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://www.w3.org/html/ig/zh/wiki/ES5/%E8%A1%A8%E8%BE%BE%E5%BC%8F#.E5.B7.A6.E5.80.BC.E8.A1.A8.E8.BE.BE.E5.BC.8F\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"左值表达式\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"MemberExpression :\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"PrimaryExpression 原始表达式\")]),t._v(\" \"),e(\"li\",[t._v(\"FunctionExpression 函数定义表达式\")]),t._v(\" \"),e(\"li\",[t._v(\"MemberExpression [ Expression ] 属性访问表达式\")]),t._v(\" \"),e(\"li\",[t._v(\"MemberExpression . IdentifierName 属性访问表达式\")]),t._v(\" \"),e(\"li\",[t._v(\"new MemberExpression Arguments 对象创建表达式\")])]),t._v(\" \"),e(\"p\",[t._v(\"几个例子\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"function foo(){}; \\nfoo(); // MemberEcpression --\\x3e foo\\n\\nfunction foo(){\\n    return function(){\\n\\n    }\\n};\\nfoo()(); //MemberEcpression --\\x3e foo()\\n\\nvar foo = {\\n    bar: function(){}\\n}\\nfoo.bar(); //MemberEcpression --\\x3e foo.bar\\n\")])])]),e(\"p\",[t._v(\"因此 MemberExpression 可以理解为（）左边的表达式\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"类型\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#类型\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://www.w3.org/html/ig/zh/wiki/ES5/%E7%B1%BB%E5%9E%8B\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"类型\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"在 ECMAScript 标准中类型分为 语言类型(Language Type) 和 规范类型(Specification Type)。\")]),t._v(\" \"),e(\"p\",[t._v(\"其中的语言类型就是语言中直接操作的类型，比如 Undefined、Null、Boolean、String、Number、Object。这些事我们平时所接触的到的。\")]),t._v(\" \"),e(\"p\",[t._v(\"规范类型用来描述表达式求值过程的中间结果，是一种内部实现，不对程序员直接开放。ECMAScript 规范使用规范类型来自洽地描述其内部作用机制，平时我们接触不到。\")]),t._v(\" \"),e(\"p\",[t._v(\"规范类型包括：Reference, List, Completion, Property Descriptor, Property Identifier, Lexical Environment, Environment Record。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"引用类型（reference-type）\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#引用类型（reference-type）\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://www.w3.org/html/ig/zh/wiki/ES5/%E7%B1%BB%E5%9E%8B#.E5.BC.95.E7.94.A8.E8.A7.84.E8.8C.83.E7.B1.BB.E5.9E.8B\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"引用类型（Reference type）\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"Reference 类型是 ECMAScript 规范用来解释 delete 、 typeof 、赋值运算符等语言特性的行为的。\")]),t._v(\" \"),e(\"p\",[t._v(\"Reference 表示的是对某个变量、数组元素或对象属性所在内存地址的引用，而非对其所在内存地址所保存值的引用。在 ECMAScript 中，赋值运算符的左侧只能是一个内存地址，而不能是一个值。（其实很好理解，你可以把值保存在某个内存地址，而不能把值赋给另一个值）\")]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://www.zhihu.com/question/31911373/answer/54055480\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"出处\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"Reference 的构成，由三个组成部分，分别是：\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"base value\\n\"),e(\"ul\",[e(\"li\",[t._v(\"所处的环境或者所在的对象\")]),t._v(\" \"),e(\"li\",[t._v(\"它的值只可能是 Undefined, Object, Boolean, String, Number, 环境变量 其中的一种。\")])])]),t._v(\" \"),e(\"li\",[t._v(\"referenced name\\n\"),e(\"ul\",[e(\"li\",[t._v(\"referenced 的名字\")]),t._v(\" \"),e(\"li\",[t._v(\"是一个字符串\")])])]),t._v(\" \"),e(\"li\",[t._v(\"strict mode flag\\n\"),e(\"ul\",[e(\"li\",[t._v(\"用来检测严格下的一些限制的标志位\")])])])]),t._v(\" \"),e(\"p\",[t._v(\"例子\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-javascript extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" foo \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" fooReference \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    base\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" EnvironmentRecord\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    name\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'foo'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    strict\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"false\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),e(\"div\",{staticClass:\"language-javascript extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" foo \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"bar\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n \\nfoo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"bar\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" BarReference \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    base\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" foo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    name\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'bar'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    strict\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"false\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),e(\"p\",[t._v(\"Reference 类型的值只有两种：\")]),t._v(\" \"),e(\"ol\",[e(\"li\",[t._v(\"标识符解析\\n\"),e(\"ul\",[e(\"li\",[t._v(\"标识符是变量名，函数名，函数参数名和全局对象中未识别的属性名。\")]),t._v(\" \"),e(\"li\",[t._v(\"具体的过程可以看\"),e(\"a\",{attrs:{href:\"https://www.w3.org/html/ig/zh/wiki/ES5/%E5%8F%AF%E6%89%A7%E8%A1%8C%E4%BB%A3%E7%A0%81%E4%B8%8E%E6%89%A7%E8%A1%8C%E7%8E%AF%E5%A2%83#.E6.A0.87.E8.AF.86.E7.AC.A6.E8.A7.A3.E6.9E.90\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"这里\"),e(\"OutboundLink\")],1),t._v(\"，详细过程就不再细说了，只要知道这种会返回 Reference 类型就可以了。\")])])]),t._v(\" \"),e(\"li\",[t._v(\"属性访问器\\n\"),e(\"ul\",[e(\"li\",[t._v(\"具体可以看\"),e(\"a\",{attrs:{href:\"https://www.w3.org/html/ig/zh/wiki/ES5/%E8%A1%A8%E8%BE%BE%E5%BC%8F#.E5.B1.9E.E6.80.A7.E8.AE.BF.E9.97.AE\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"这里\"),e(\"OutboundLink\")],1)])])])]),t._v(\" \"),e(\"h3\",{attrs:{id:\"相关方法\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#相关方法\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 相关方法\")]),t._v(\" \"),e(\"h4\",{attrs:{id:\"_1-getvalue\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-getvalue\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 1. GetValue()\")]),t._v(\" \"),e(\"p\",[t._v(\"用于从 Reference 获取对应值。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-javascript extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" foo \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" fooReference \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    base\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" EnvironmentRecord\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    name\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'foo'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    strict\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"false\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"GetValue\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"fooReference\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 1;\")]),t._v(\"\\n\")])])]),e(\"p\",[t._v(\"调用 GetValue，返回的将是具体的语言类型的值，而不再是一个 Reference\")]),t._v(\" \"),e(\"p\",[t._v(\"另外\")]),t._v(\" \"),e(\"h4\",{attrs:{id:\"_2-getbase\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-getbase\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 2. GetBase()\")]),t._v(\" \"),e(\"p\",[t._v(\"返回 Reference 的 base value\")]),t._v(\" \"),e(\"h4\",{attrs:{id:\"_3-hasprimitivebase\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-hasprimitivebase\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 3. HasPrimitiveBase()\")]),t._v(\" \"),e(\"p\",[t._v(\"如果 Reference 的 base value 是 Boolean、String、Number，那么返回 true。\")]),t._v(\" \"),e(\"h4\",{attrs:{id:\"_4-ispropertyreference\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-ispropertyreference\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 4. IsPropertyReference()\")]),t._v(\" \"),e(\"p\",[t._v(\"如果 Reference 的 base value 是个 Object 或 HasPrimitiveBase(V) 是 true，那么返回 true；否则返回 false。\")]),t._v(\" \"),e(\"p\",[t._v(\"也就是说 如果 Reference 的 base value 是个 Object、Boolean、String、Number 返回 true；否则返回 false。\")]),t._v(\" \"),e(\"h4\",{attrs:{id:\"_5-implicitthisvalue\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-implicitthisvalue\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 5. ImplicitThisValue()\")]),t._v(\" \"),e(\"p\",[t._v(\"该函数始终返回 undefined\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"分析\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#分析\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 分析\")]),t._v(\" \"),e(\"p\",[t._v(\"了解过上面的内容之后我们将函数调用转化为伪代码，并且仅留下与 this 相关的内容。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-javascript extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" ref \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" MemberExpression\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" type \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Type\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"ref\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" thisValue\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"type \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" Reference\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"IsPropertyReference\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"ref\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        thisValue \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"GetBase\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"ref\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"else\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// (GetBase(ref) == EnvironmentRecord)\")]),t._v(\"\\n        thisValue \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"ImplicitThisValue\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"else\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    thisValue \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"undefined\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" thisValue\\n\")])])]),e(\"p\",[t._v(\"需要注意在\"),e(\"a\",{attrs:{href:\"https://www.w3.org/html/ig/zh/wiki/ES5/%E5%8F%AF%E6%89%A7%E8%A1%8C%E4%BB%A3%E7%A0%81%E4%B8%8E%E6%89%A7%E8%A1%8C%E7%8E%AF%E5%A2%83#.E8.BF.9B.E5.85.A5.E5.87.BD.E6.95.B0.E4.BB.A3.E7.A0.81\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"进入函数代码\"),e(\"OutboundLink\")],1),t._v(\"的时候，如果是非严格模式且 this 为 null、undefined，this 会指向全局对象。\")]),t._v(\" \"),e(\"p\",[t._v(\"得出以下的流程图\")]),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:s(353),alt:\"\"}})]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"http://liyangready.github.io/2016/07/31/%E6%A0%B9%E6%B2%BBJavaScript%E4%B8%AD%E7%9A%84this-ECMAScript%E8%A7%84%E8%8C%83%E8%A7%A3%E8%AF%BB/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"图片来源\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"实战\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实战\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 实战\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"例1\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#例1\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 例1\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-javascript extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"foo\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    console\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"foo\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \\n\")])])]),e(\"p\",[t._v(\"分析如下：\")]),t._v(\" \"),e(\"ol\",[e(\"li\",[t._v(\"首先可以知道 MemberExpression 就是 foo，这是一个标识符，进行标识符解析，然后得到一个 Reference\")])]),t._v(\" \"),e(\"div\",{staticClass:\"language-javascript extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" fooReference \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    base\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" EnvironmentRecord\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    name\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'foo'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    strict\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"false\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),e(\"ol\",{attrs:{start:\"2\"}},[e(\"li\",[t._v(\"fooReference 是 Reference 类型，调用 IsPropertyReference 判断\")]),t._v(\" \"),e(\"li\",[t._v(\"由于 fooReference 的 base value 不是 Object、Boolean、String、Number 这几种，因而 IsPropertyReference 返回 false\")]),t._v(\" \"),e(\"li\",[t._v(\"fooReference 是 Reference 类型且 base value 正是 Environment Record，所以会调用 ImplicitThisValue(ref)\")]),t._v(\" \"),e(\"li\",[t._v(\"ImplicitThisValue 始终返回 undefined\")]),t._v(\" \"),e(\"li\",[t._v(\"因此 thisValue 等于 undefined\")]),t._v(\" \"),e(\"li\",[t._v(\"是非严格模式且 this 为 undefined，因此最终 this 会指向全局对象\")])]),t._v(\" \"),e(\"h3\",{attrs:{id:\"例2\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#例2\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 例2\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-javascript extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" foo \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"bar\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    console\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\nfoo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"bar\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),e(\"p\",[t._v(\"分析如下\")]),t._v(\" \"),e(\"ol\",[e(\"li\",[t._v(\"MemberExpression 就是 foo.bar，这是一个属性访问器，因此得到一个 Reference\")])]),t._v(\" \"),e(\"div\",{staticClass:\"language-javascript extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" barReference \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  base\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" foo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  name\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'bar'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  strict\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"false\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),e(\"ol\",{attrs:{start:\"2\"}},[e(\"li\",[t._v(\"barReference 是 Reference 类型，调用 IsPropertyReference 判断\")]),t._v(\" \"),e(\"li\",[t._v(\"由于 barReference 的 base value 是 foo，是一个 Object，因此 IsPropertyReference 返回 true\")]),t._v(\" \"),e(\"li\",[t._v(\"因此 thisValue 等于 GetBase(barReference)，也就是 foo\")])]),t._v(\" \"),e(\"h3\",{attrs:{id:\"例3\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#例3\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 例3\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-javascript extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" foo \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"bar\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    console\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" test \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" foo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"bar\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"test\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),e(\"p\",[t._v(\"可以看出这个例子与例 2 很像，但是调用的方式改变了。\")]),t._v(\" \"),e(\"p\",[t._v(\"分析如下：\")]),t._v(\" \"),e(\"ol\",[e(\"li\",[t._v(\"MemberExpression 就是 test，这是一个标识符，进行标识符解析，然后得到一个 Reference\")])]),t._v(\" \"),e(\"div\",{staticClass:\"language-javascript extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" testReference \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  base\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" EnvironmentRecord\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  name\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'test'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  strict\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"false\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),e(\"ol\",{attrs:{start:\"2\"}},[e(\"li\",[t._v(\"接下来这个例子的处理方式就跟例 1 中的一样了，最终 this 指向了全局变量\")])]),t._v(\" \"),e(\"h3\",{attrs:{id:\"例4\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#例4\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 例4\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-javascript extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" foo \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"bar\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    console\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 1\")]),t._v(\"\\nfoo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"bar\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Reference, foo\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 2\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"foo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"bar\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Reference, foo\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 3\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"foo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"bar \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" foo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"bar\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// global?\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 4\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"false\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"||\")]),t._v(\" foo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"bar\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// global?\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 5\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"foo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"bar\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" foo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"bar\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// global?\")]),t._v(\"\\n\")])])]),e(\"h4\",{attrs:{id:\"_1-foo-bar\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-foo-bar\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 1. foo.bar()\")]),t._v(\" \"),e(\"p\",[t._v(\"foo.bar() 我们上面分析过了， this 是 base 对象，也就是 foo\")]),t._v(\" \"),e(\"h4\",{attrs:{id:\"_2-foo-bar\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-foo-bar\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 2. (foo.bar)()\")]),t._v(\" \"),e(\"p\",[t._v(\"foo.bar 被 () 包住， () 是\"),e(\"a\",{attrs:{href:\"https://www.w3.org/html/ig/zh/wiki/ES5/%E8%A1%A8%E8%BE%BE%E5%BC%8F#.E7.BE.A4.E7.BB.84.E8.BF.90.E7.AE.97.E7.AC.A6\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"群组运算符\"),e(\"OutboundLink\")],1),t._v(\"。\")]),t._v(\" \"),e(\"blockquote\",[e(\"p\",[t._v(\"返回执行 Expression 的结果。这可能是一个 Reference。\")]),t._v(\" \"),e(\"p\",[t._v(\"注：本算法不在执行 Expression 后使用 GetValue。这主要的目的是让 delete 与 typeof 运算符可以作用在被括号括起来的表达式。\")])]),t._v(\" \"),e(\"p\",[t._v(\"因此其与 foo.bar()结果一样。\")]),t._v(\" \"),e(\"h4\",{attrs:{id:\"_3-foo-bar-foo-bar\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-foo-bar-foo-bar\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 3. (foo.bar = foo.bar)()\")]),t._v(\" \"),e(\"p\",[t._v(\"我们可以看到有\"),e(\"a\",{attrs:{href:\"https://www.w3.org/html/ig/zh/wiki/ES5/%E8%A1%A8%E8%BE%BE%E5%BC%8F#.E7.AE.80.E5.8D.95.E8.B5.8B.E5.80.BC.EF.BC.88.3D.EF.BC.89\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"赋值运算符\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"运算过程中有一步是\")]),t._v(\" \"),e(\"blockquote\",[e(\"ol\",{attrs:{start:\"3\"}},[e(\"li\",[t._v(\"令 rval 为 GetValue(rref)。\")])])]),t._v(\" \"),e(\"p\",[t._v(\"上面我们知道 GetValue() 返回的是语言类型，不是 Reference。因此我们可以得出结论 thisValue 等于 undefined 。由于是非严格模式，因此 this 最终指向全局对象\")]),t._v(\" \"),e(\"p\",[t._v(\"剩下的 \"),e(\"code\",[t._v(\"(false || foo.bar)()\")]),t._v(\" 和 \"),e(\"code\",[t._v(\"(foo.bar, foo.bar)()\")]),t._v(\" 分别涉及到 \"),e(\"a\",{attrs:{href:\"https://www.w3.org/html/ig/zh/wiki/ES5/%E8%A1%A8%E8%BE%BE%E5%BC%8F#.E4.BA.8C.E5.85.83.E9.80.BB.E8.BE.91.E8.BF.90.E7.AE.97.E7.AC.A6\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"逻辑与运算符\"),e(\"OutboundLink\")],1),t._v(\" 和 \"),e(\"a\",{attrs:{href:\"https://www.w3.org/html/ig/zh/wiki/ES5/%E8%A1%A8%E8%BE%BE%E5%BC%8F#.E9.80.97.E5.8F.B7.E8.BF.90.E7.AE.97.E7.AC.A6\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"逗号运算符\"),e(\"OutboundLink\")],1),t._v(\"。它们也会调用 \"),e(\"code\",[t._v(\"GetValue()\")]),t._v(\" 因此 this 都指向全局对象。\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"例5\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#例5\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 例5\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-javascript extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      console\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// null => global\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),e(\"p\",[t._v(\"分析如下\")]),t._v(\" \"),e(\"ol\",[e(\"li\",[t._v(\"MemberExpression 是一个函数对象，不是一个可以解析的标识符或者属性访问器，那么最终得到的结果为 null。\")]),t._v(\" \"),e(\"li\",[t._v(\"非严格模式下，最终 this 指向 全局对象。\")])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"this-的特殊情况\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#this-的特殊情况\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" this 的特殊情况\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"使用-call，apply-显示绑定-this\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用-call，apply-显示绑定-this\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 使用 call，apply 显示绑定 this\")]),t._v(\" \"),e(\"p\",[t._v(\"JavaScript 内部提供了一种机制，让我们可以自行手动设置 this 的指向。它们就是 call 与 apply。所有的函数都具有着两个方法。它们除了参数略有不同，其功能完全一样。它们的第一个参数都为 this 将要指向的对象。\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"构造函数中的-this\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#构造函数中的-this\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 构造函数中的 this\")]),t._v(\" \"),e(\"p\",[t._v(\"this 指向构建的对象\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"箭头函数中的-this\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#箭头函数中的-this\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 箭头函数中的 this\")]),t._v(\" \"),e(\"p\",[t._v(\"在箭头函数中，this 与封闭词法环境的 this 保持一致。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"var globalObject = this;\\nvar foo = (() => this);\\nconsole.log(foo() === globalObject); // true\\n\")])])]),e(\"p\",[t._v(\"如果将 this 传递给 call、bind、或者 apply，它将被忽略。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"// 作为对象的一个方法调用\\nvar obj = {foo: foo};\\nconsole.log(obj.foo() === globalObject); // true\\n\\n// 尝试使用call来设定this\\nconsole.log(foo.call(obj) === globalObject); // true\\n\\n// 尝试使用bind来设定this\\nfoo = foo.bind(obj);\\nconsole.log(foo() === globalObject); // true\\n\")])])]),e(\"p\",[t._v(\"无论如何，foo 的 this 被设置为他被创建时的环境（在上面的例子中，就是全局对象）。这同样适用于在其他函数内创建的箭头函数：这些箭头函数的this被设置为封闭的词法环境的。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"参考\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 参考\")]),t._v(\" \"),e(\"ol\",[e(\"li\",[e(\"a\",{attrs:{href:\"https://juejin.im/entry/5a3368f65188250f8874ea19\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"深入理解JavaScript系列——this\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"li\",[e(\"a\",{attrs:{href:\"https://github.com/mqyqingfeng/Blog/issues/7\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"JavaScript深入之从ECMAScript规范解读this\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"li\",[e(\"a\",{attrs:{href:\"https://www.w3.org/html/ig/zh/wiki/ES5\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"W3C ES5\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"li\",[e(\"a\",{attrs:{href:\"https://www.cnblogs.com/TomXu/archive/2012/01/17/2310479.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"深入理解JavaScript系列（13）：This? Yes,this!\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"li\",[e(\"a\",{attrs:{href:\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/this\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"MDN this\"),e(\"OutboundLink\")],1)])])])},[],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}