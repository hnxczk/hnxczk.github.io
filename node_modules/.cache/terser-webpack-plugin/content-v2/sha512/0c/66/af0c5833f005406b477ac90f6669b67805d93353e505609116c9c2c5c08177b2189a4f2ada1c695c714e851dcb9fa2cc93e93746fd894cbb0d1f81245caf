{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{329:function(a,t,e){a.exports=e.p+\"assets/img/07-adapter-pattern-1.87fb5c01.png\"},330:function(a,t,e){a.exports=e.p+\"assets/img/07-adapter-pattern-2.c02b4f46.png\"},394:function(a,t,e){\"use strict\";e.r(t);var r=e(0),n=Object(r.a)({},function(){var a=this,t=a.$createElement,r=a._self._c||t;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[r(\"h1\",{attrs:{id:\"适配器模式与外观模式\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#适配器模式与外观模式\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 适配器模式与外观模式\")]),a._v(\" \"),r(\"h2\",{attrs:{id:\"生活中的适配器\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#生活中的适配器\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 生活中的适配器\")]),a._v(\" \"),r(\"p\",[a._v(\"买过港版 iPhone 的同学对适配器这个东西肯定印象深刻，由于香港使用欧制的交流电插头与标准的插座不匹配。因此买手机的时候商家都会送一个适配器，通过适配器就可以正常的充电了。这里的适配器模式就跟这个有点类似。\")]),a._v(\" \"),r(\"h2\",{attrs:{id:\"例子\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#例子\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 例子\")]),a._v(\" \"),r(\"p\",[a._v(\"首先是两个接口：鸭子和火鸡\")]),a._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[a._v(\"protocol Duck {\\n    func quack()\\n    func fly()\\n}\\n\")])])]),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[a._v(\"protocol Turkey {\\n    func gobble()\\n    func fly()\\n}\\n\")])])]),r(\"p\",[a._v(\"实现上面接口的绿头鸭和火鸡的类\")]),a._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[a._v('class MallardDuck: Duck {\\n    func quack() {\\n        print(\"Quack\")\\n    }\\n    \\n    func fly() {\\n        print(\"I\\'m flying\")\\n    }\\n}\\n')])])]),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[a._v('class WildTurkey: Turkey {\\n    func gobble() {\\n        print(\"Gobble gobble\")\\n    }\\n    func fly() {\\n        print(\"I\\'m flying a short distance\")\\n    }\\n}\\n')])])]),r(\"p\",[a._v(\"最后是实现 Duck 接口的 TurkeyAdapter 适配器\")]),a._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[a._v(\"class TurkeyAdapter: Duck {\\n    var turkey: Turkey\\n    \\n    init(turkey: Turkey) {\\n        self.turkey = turkey\\n    }\\n    \\n    func quack() {\\n        turkey.gobble()\\n    }\\n    \\n    // 由于火鸡飞的近因此调用多次的飞行\\n    func fly() {\\n        for _ in 0..<5 {\\n            turkey.fly()\\n        }\\n    }\\n}\\n\")])])]),r(\"p\",[a._v(\"调用\")]),a._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[a._v(\"var duck = MallardDuck()\\n\\nvar turkey = WildTurkey()\\nvar turkeyAdapter = TurkeyAdapter(turkey: turkey)\\n\\nduck.quack()\\nduck.fly()\\n\\nturkey.gobble()\\nturkey.fly()\\n\\nturkeyAdapter.quack()\\nturkeyAdapter.fly()\\n\")])])]),r(\"p\",[a._v(\"从上面我我们可以看出来\\b通过 适配器 就可以把 火鸡 当成 鸭子 来使用。\")]),a._v(\" \"),r(\"p\",[a._v(\"客户使用适配器的过程如下：\")]),a._v(\" \"),r(\"ol\",[r(\"li\",[a._v(\"客户通过目标接口调用适配器的方法对适配器发出请求。\")]),a._v(\" \"),r(\"li\",[a._v(\"适配器使用被适配者接口把请求转换成被适配者的一个或多个调用接口。\")]),a._v(\" \"),r(\"li\",[a._v(\"客户接受到调用的结构，但并未察觉这一切是适配器在起转换作用。\")])]),a._v(\" \"),r(\"h2\",{attrs:{id:\"定义\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定义\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 定义\")]),a._v(\" \"),r(\"p\",[r(\"strong\",[a._v(\"适配器模式将一个类的接口，转换成客户期望的另一个接口，适配器让原本接口不兼容的类可以合作无间。\")])]),a._v(\" \"),r(\"p\",[a._v(\"这个模式可以通过创建适配器进行接口转换，让不兼容的接口变成兼容。这可以让客户从实现的接口解耦。如果在一端时间之后，我们想要改变接口，适配器可以将改变的部分封装起来，客户就不必为了应对不同的接口而每次跟着修改。\")]),a._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:e(329),alt:\"类图\"}})]),a._v(\" \"),r(\"h2\",{attrs:{id:\"对象和类的适配器\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#对象和类的适配器\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 对象和类的适配器\")]),a._v(\" \"),r(\"p\",[a._v(\"上图所示的其实是对象的适配器，而类的适配器则需要多继承来实现，在\\b我们熟悉的 Java Swift OC 中都是不能实现的。\\b\")]),a._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:e(330),alt:\"类图\"}})]),a._v(\" \"),r(\"h2\",{attrs:{id:\"\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#\",\"aria-hidden\":\"true\"}},[a._v(\"#\")])])])},[],!1,null,null,null);t.default=n.exports}}]);","extractedComments":[]}